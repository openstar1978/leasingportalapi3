@using LeasingPortalApi.Models;
@{
    ViewBag.Title = "MoreSupplier";
    Layout = "~/Views/Shared/_FrontLayout.cshtml";
    Page.Title = "SingleProduct";
    var id = ViewBag.Id;
    var productname = ViewBag.productname;
    var prodvarid = int.Parse(id);

}
<style>
    .prodheader p {
        margin: 10px auto;
        text-align: center;
        vertical-align: middle;
        font-size: 20px;
    }

    .mybtn {
        display: block;
        width: 100%;
        padding: 1.108em 2.134em !important;
        margin-bottom: .429em !important;
        margin-top: 1.429em !important;
        border-radius: 1.8em !important;
        background: #03194f;
        color: #bcbcbc;
    }

        .mybtn i {
            color: #bcbcbc;
        }

    .price-add-to-cart {
        border-bottom: 0px !important;
    }

    @@media (min-width: 768px) {
        .site-content {
            min-height: 400px;
        }

        ul.products[data-view=list-view-small].columns-5 > li.product .product-inner .product-loop-header {
            flex: 0 0 33.333333%;
            max-width: 33.333333%;
        }

        ul.products[data-view=list-view-small].columns-5 > li.product .product-inner .product-loop-body {
            flex: 0 0 33.333333%;
            max-width: 33.333333%;
        }
    }
</style>
<style>
    @@media (min-width: 992px) {
        .woocommerce-loop-product__title {
            height: 3.7em;
        }
    }

    select.form-control {
        border-width: 1px;
    }

    .mylabel {
        color: #878787;
        margin-bottom: 1em;
        font-size: .857em;
        line-height: 1.05em;
        height: 1.05em;
    }
</style>
<div class="se-pre-con ng-hide" ng-show="loader" style="z-index:100">
    <div style="display:block;width:500px;height:100px;">

    </div>

</div>
<div class="m-app-loading" ng-animate-children>
    <style type="text/css">
        div.m-app-loading {
            position: fixed;
            z-index: 99999999;
        }

            div.m-app-loading div.animated-container {
                background-color: #ffffff;
                bottom: 0px;
                left: 0px;
                opacity: 1.0;
                position: fixed;
                right: 0px;
                top: 500px;
                margin-top: 100px;
                width: 100%;
                height: 100%;
                z-index: 99999999;
            }
                /* Used to initialize the ng-leave animation state. */
                div.m-app-loading div.animated-container.ng-leave {
                    opacity: 1.0;
                    transition: all linear 200ms;
                    -webkit-transition: all linear 200ms;
                }
                /* Used to set the end properties of the ng-leave animation state. */
                div.m-app-loading div.animated-container.ng-leave-active {
                    opacity: 0;
                }

            div.m-app-loading div.messaging {
                color: #FFFFFF;
                font-family: monospace;
                left: 0px;
                margin-top: -37px;
                position: absolute;
                right: 0px;
                text-align: center;
                top: 50%;
                z-index: 10000000;
            }

            div.m-app-loading h1 {
                font-size: 26px;
                line-height: 35px;
                margin: 0px 0px 20px 0px;
            }

            div.m-app-loading p {
                font-size: 18px;
                line-height: 14px;
                margin: 0px 0px 0px 0px;
            }

        ul.products[data-view=list-view-small].columns-5 > li.product .product-loop-header .loop-product-categories, ul.products[data-view=list-view-small].columns-5 > li.product .product-loop-header .woocommerce-loop-product__title {
            display: block;
        }
    </style>


    <!-- BEGIN: Actual animated container. -->
    <div class="animated-container">

        <div class="messaging">
            <div class="spinner"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>
            <h1></h1>

            <p>
            </p>

        </div>

    </div>
    <!-- END: Actual animated container. -->

</div>
<div id="content" class="site-content" tabindex="-1" ng-controller="SingleProductController">
    <div class="container">
        <div id="confirmation-dialog">
            <div class="modal fade confirmation-dialog" role="dialog">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">{{confirmationDialogConfig.title}}</h4>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            <div class="span5" ng-bind-html="confirmationDialogConfig.message"></div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" ng-repeat="button in confirmationDialogConfig.buttons" ng-click="executeDialogAction(button.action,button.item,button.qty,button.event)" class="btn btn-primary">{{button.label}}</button>
                            <button type="button" ng-repeat="button in confirmationDialogConfig.buttons2" ng-click="executeDialogAction(button.action,button.item,button.qty,button.event)" class="btn btn-warning" style="margin-bottom:5px;">{{button.label}}</button>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <nav class="woocommerce-breadcrumb"><a href="@Url.Action("Index","Leasing")">Home</a><span class="delimiter"><i class="fa fa-angle-right"></i></span>More Supplier</nav><div class="site-content-inner">
            <div id="primary" class="content-area">
                <main id="main" class="site-main" ng-if="!loader">
                    <div class="shop-control-bar prodheader">
                        <p>Product : @productname</p>
                    </div>
                    <ul data-view="list-view-small" data-toggle="shop-products" class="products columns-5 columns__wide--5">

                        <!-- ngRepeat: product in filtered = (Products | filter:priceFilter) | orderBy: listOrder -->
                        <li ng-repeat="product in filtered = (Products | filter:priceFilter) | orderBy: listOrder  " class="post-2706 product type-product status-publish has-post-thumbnail product_cat-tablets first instock shipping-taxable purchasable product-type-simple ng-scope  border box-shadow-1" style="margin-top:10px;">
                            <div class="product-outer product-item__outer">
                                <div class="product-inner product-item__inner">
                                    <div class="product-loop-header product-item__header">
                                        <span class="loop-product-categories" style="display:block"><a href="#" rel="tag" class="ng-binding">Seller</a></span>
                                        <a href="javascript:;" class="woocommerce-LoopProduct-link woocommerce-loop-product__link">
                                            <h2 class="woocommerce-loop-product__title ng-binding" style="display:block">{{product.msuppliername}}</h2>

                                        </a>
                                    </div>
                                    <div class="product-loop-body product-item__body">
                                        <div class="col-xs-6">
                                            <span class="loop-product-categories"><a href="/Leasing/ProductDetail?productname=Apple iPad Air 32GB Wi-Fi - Space Grey&amp;getproduct=ThBF%2ffhMDrSeXfn6T1Evyg%3d%3d" rel="tag" class="ng-binding">Price</a></span>
                                            <a class="woocommerce-LoopProduct-link woocommerce-loop-product__link">
                                                <h2 class="woocommerce-loop-product__title ng-binding">{{product.mprice | number:2}}</h2>
                                                <div class="product-sku" style="display:none;">SKU: 5487FB8/35</div>
                                            </a>
                                        </div>
                                        <div class="col-xs-6">

                                        </div>
                                    </div>
                                    <div class="product-loop-footer product-item__footer">
                                        <div class="term-add-to-cart" style="display:block;width:100%;">
                                            <div class="col-xs-12">
                                                <!--<label>Unit Rental <span class="excVAT">(exc. VAT)</span></label>-->

                                            </div>

                                            <div class="col-xs-6 term-freq">
                                                <label>Frequency</label>
                                                <!--<select ng-options="size as size.name for size in sizes" ng-model="itemss" ng-change="update2(itemss)"></select>-->

                                                <select ng-init="termdata = sizes[0]" ng-options="size as size.name for size in sizes " class="form-control termselect" style="" ng-model="termdata" ng-change="updateterm(termdata,product,termperiod)"></select>

                                            </div>
                                            <div class="col-xs-6 term-period">
                                                <label>Period</label>
                                                <!--<select ng-options="size as size.name for size in sizes" ng-model="itemss" ng-change="update2(itemss)"></select>-->

                                                <select ng-init="termperiod = periods[0]" ng-options="period as period.name for period in periods " class="form-control termselect" style="" ng-model="termperiod" ng-change="updateterm(termdata,product,termperiod)"></select>

                                            </div>

                                        </div>
                                        <div class="price-add-to-cart">
                                            <div class="" data-toggle="tooltip" data-title=" Add to Basket" data-original-title="" title="">
                                                <button type="submit" name="add-to-cart" value="2439" ng-click="addToCart($event,product,1)" class="button mybtn"><i class="fa fa-shopping-cart"></i>  Add to Basket</button>

                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </li><!-- end ngRepeat: product in filtered = (Products | filter:priceFilter) | orderBy: listOrder -->
                    </ul>
                    <!-- #post-## -->

                </main><!-- #main -->
            </div><!-- #primary -->

        </div>
    </div>
</div>



@section scripts
                               {
    <script>

        app.directive(
            "mAppLoading",
            function( $animate ) {
                // Return the directive configuration.
                return({
                    link: link,
                    restrict: "C"
                });
                // I bind the JavaScript events to the scope.
                function link( scope, element, attributes ) {
                    // Due to the way AngularJS prevents animation during the bootstrap
                    // of the application, we can't animate the top-level container; but,
                    // since we added "ngAnimateChildren", we can animated the inner
                    // container during this phase.
                    // --
                    // NOTE: Am using .eq(1) so that we don't animate the Style block.
                    $animate.leave( element.children().eq( 1 ) ).then(
                        function cleanupAfterAnimation() {
                            // Remove the root directive element.
                            element.remove();
                            // Clear the closed-over variable references.
                            scope = element = attributes = null;
                        }
                    );
                }
            }
        );

        app.controller('SingleProductController', ['$scope', '$http', '$rootScope','$location','$window','$cookies',
    function ($scope, $http, $rootScope,$location,$window,$cookies) {

        var expireDate = new Date();
        expireDate.setDate(expireDate.getDate() + 365);

        $scope.Session_Id = "";
        $rootScope.shoppingCart = $rootScope.shoppingCart || [];
                    $scope.listOrder = 'mprodname'
                    $scope.getcount=0;
                    $scope.Products = [];
                    $scope.count = "";
                    $scope.loader = true;
                    $scope.search = '';
                    $scope.sameval = 1;
                    $scope.sizes = [{ code: 1, name: 'Monthly' }, { code: 3, name: 'Quarterly' }, { code: 4, name: 'Termly' }, { code: 6, name: 'Bi-annually' }, { code: 12, name: 'Annually' }]
                    $scope.periods = [{ code: 60, name: '5 years' }, { code: 48, name: '4 years' }, { code: 36, name: '3 years' }, { code: 24, name: '2 years' }, { code: 12, name: '1 years' }]
                    /*$http.get('/Api/ProductApi/GetAllProduct/',$scope.params).success(function (data) {
                        $scope.Products = data;
                        $scope.loader = false;
                        $scope.count = "showing " + data.length + " results";
                    });*/

                    $http.get('/api/SingleApi/GetMoreSupplierDetail?subid=' + @id+'&getprodname=@productname').success(function (data) {
                        $scope.Products = data;
                        for (var i = 0; i < data.length; i++) {
                            data[i].mprice = ((data[i].mprice * 1) / (60 * 0.9)).toFixed(2);
                            data[i].mtermid = 1;
                        }
                        $scope.getcount=$scope.Products.length;
                        $scope.loader = false;
                        $scope.count = "showing " + data.length + " results";
                        $rootScope.min = Math.min.apply(Math,$scope.Products.map(function(item){return item.mprice;}));
                        $rootScope.max = Math.max.apply(Math,$scope.Products.map(function(item){return item.mprice;}));

                    });

            $scope.priceFiltering = function(){
                $scope.priceFilter = function(product) {
                    var i=0;
                    if ((product.mprice <= $scope.max) && (product.mprice >= $scope.min)){
                        return product;
                    };

                    $window.scrollTo(0, angular.element('#SingleProductController').offsetTop);

                }


            }
            $scope.updateterm = function (termfreq, item, termperiod) {
                var freq = termfreq.code;
                var period = termperiod.code;
                console.log("F:" + freq + " P:" + period);
                item.mtermf = freq;
                item.mtermp = period;
                item.mprice = (item.mbasicprice * freq) / (period * 0.9);
            }
            $scope.getTerms = function (mtermf, mtermp) {
                var msg = "";
                var p = "";
                if (mtermp != null) {
                    p = mtermp / 12;
                }
                console.log(mtermf, mtermp);
                switch (mtermf) {
                    case 1:
                        msg = p + " years monthly";
                        break;
                    case 3:
                        msg = p + " years quarterly";
                        break;
                    case 4:
                        msg = p + " years termly";
                        break;
                    case 6:
                        msg = p + " years bi-annually";
                        break;
                    case 12:
                        msg = p + " years annually";
                        break;
                    default:
                        msg = "";
                        break;

                }
                //item.mprice=5;
                return msg;
            }
        /******************************************************/
            $scope.confirmationDialogConfig = {
                title: "Warning!!!",
                message: "Lease Term selected for this product is different with selected previous products,do you want to continue?",
                buttons: [{
                    label: "Yes",
                    action: "yes"
                }],
                buttons2: [{
                    label: "Yes",
                    action: "yes"
                }]
            };
            $scope.executeDialogAction = function (action, index, step, event) {
                if (typeof $scope[action] === "function") {
                    $scope[action](index, step, event);
                }
            };
            $scope.showDialog = function (flag) {
                jQuery("#confirmation-dialog .modal").modal(flag ? 'show' : 'hide');
            };
            $scope.yes = function ( item, qty, event) {
                $scope.sameval = 0;
                $cookies.put('same', $scope.sameval, { 'expires': expireDate });
                item.mtermf = $scope.items.Product.mtermf;
                item.mtermp = $scope.items.Product.mtermp;
                item.mprice = (item.mbasicprice * item.mtermf) / (item.mtermp * 0.9);
                $scope.addToCart(event, item.Product, qty);
                jQuery("." + $scope.items.Product.mprodvarid + "btny").addClass("added");
                jQuery("." + $scope.items.Product.mprodvarid + "btny").after('<a href="/Leasing/ViewCart" data-toggle="tooltip" data-trigger="hover" class="added_to_cart wc-forward custombtn" title="View Your Basket" data-original-title="View Your Basket">View Your Basket</a>');
                jQuery('.custombtn').tooltip();
                $scope.showDialog(false);
            };
            $scope.no = function (item, qty, event) {
                var termf = ".termf" + item.mprodvarid;
                var termp = ".termp" + item.mprodvarid;
                item.mprice = (item.mbasicprice * item.mtermf) / (item.mtermp * 0.9);
                console.log("termf " + item.mtermf + " prodvar :" + item.mprodvarid);
                jQuery(termf).val(item.mtermf);
                jQuery(termp).val(item.mtermp);
                $scope.addToCart(event, item, qty);
                jQuery("." + $scope.items.Product.mprodvarid + "btny").addClass("added");
                jQuery("." + $scope.items.Product.mprodvarid + "btny").after('<a href="/Leasing/ViewCart" data-toggle="tooltip" data-trigger="hover" class="added_to_cart wc-forward custombtn" title="View Your Basket" data-original-title="View Your Basket">View Your Basket</a>');
                jQuery('.custombtn').tooltip();
                $scope.showDialog(false);

            };
        /*****************************************************/

                    $scope.$watch('Products', function () {
                        $scope.$emit('Products', $scope.Products);

                    });
                    if (!angular.isUndefined($cookies.get('leasebasket'))) {
                        $rootScope.shoppingCart = $cookies.getObject('leasebasket');
                    }
                    if (!angular.isUndefined($cookies.get('same'))) {
                        $scope.sameval = $cookies.getObject('same');
                    }
                    $scope.addToCart = function ($event,item, no) {
                        var msg = true;
                        if (!angular.isUndefined($cookies.get('leasebasket'))) {
                            $scope.Session_Id = $cookies.getObject('leasebasket');
                        }
                        var lessitem = {
                            Session_Id: $scope.Session_Id,
                            mprodid: item.mprodid,
                            mprodvarid: item.mprodvarid,
                            mprodname: item.mprodname,
                            msubpicname: item.msubpicname,
                            msupplierid: item.msupplierid,
                            mproducturl: item.mproducturl,
                            mprice: item.mprice,
                            mtermf: item.mtermf,
                            mtermp: item.mtermp,
                            mqty: no,
                        };
                        var items = { Product: lessitem, Quantity: no };
                        if ($rootScope.shoppingCart.length === 0) {
                            msg = false;
                            $rootScope.shoppingCart.push(items);
                            $scope.count = "showing " + $rootScope.shoppingCart.length + " results";
                        } else {
                            var repeat = false;
                            for (var i = 0; i < $rootScope.shoppingCart.length; i++) {
                                console.log($rootScope.shoppingCart[i].Product.mprodvarid);
                                if ($rootScope.shoppingCart[i].Product.mprodvarid === items.Product.mprodvarid && $rootScope.shoppingCart[i].Product.msupplierid === items.Product.msupplierid && $rootScope.shoppingCart[i].Product.mtermf === items.Product.mtermf && $rootScope.shoppingCart[i].Product.mtermp === items.Product.mtermp) {
                                    repeat = true;
                                    msg = false;
                                    $rootScope.shoppingCart[i].Quantity += 1;
                                }
                            }
                            if (!repeat) {
                                if (($rootScope.shoppingCart[0].Product.mtermf !== items.Product.mtermf || $rootScope.shoppingCart[0].Product.mtermp !== items.Product.mtermp) && $scope.sameval == 3) {
                                    msg = true;
                                    item.mtermf = $rootScope.shoppingCart[0].Product.mtermf;
                                    item.mtermp = $rootScope.shoppingCart[0].Product.mtermp;
                                    //item.mprice = (item.mbasicprice * item.mtermf) / (item.mtermp * 0.9);
                                    $scope.items = items;
                                    $scope.confirmationDialogConfig = {
                                        title: "Warning!!!",
                                        message: "Lease term defined differs from that of previous item put in basket",
                                        buttons: [{
                                            label: "Proceed with this new lease term for this item",
                                            action: "yes",
                                            item: items,
                                            qty: no,
                                            event: ""
                                        }],
                                        buttons2: [{
                                            label: "Set to prev item lease terms (" + $scope.getTerms($rootScope.shoppingCart[0].Product.mtermf, $rootScope.shoppingCart[0].Product.mtermp) + ")",
                                            action: "no",
                                            item: item,
                                            qty: no,
                                            event: ""
                                        }]
                                    };
                                    jQuery($event.target).addClass(items.Product.mprodvarid + "btny");
                                    $scope.showDialog(true);

                                }
                                else {
                                    msg = false;
                                    $rootScope.shoppingCart.push(items);
                                }
                            }
                            $scope.count = "showing " + $rootScope.shoppingCart.length + " results";
                        }
                        if (!msg) {
                            var d = [];
                            d.push(lessitem)
                            var datas = lessitem;
                            if ($rootScope.shoppingCart.length !== 0 && repeat == true) {
                                $http.post("/api/CookieApi/UpdateCookieCart", datas).success(function (data, status) {

                                    if (data.length > 0 && data[0] == "Success") {
                                        $scope.loader = false;
                                        $cookies.putObject('leasebasket', data[1], { 'expires': expireDate, 'path': '/' });
                                        $scope.total += parseFloat(items.Product.mprice);

                                        $scope.count = "showing " + data.length + " results";
                                        jQuery(".added_to_cart.wc-forward").data("original-title", "View Your Basket");
                                        $scope.loader = true;
                                        //window.location = "/Leasing/ViewProduct?" + item.mproducturl + "&update=yes";
                                        toastr.success("Product added in Your Basket", "Success");

                                    }

                                });

                            } else {
                                $http.post("/api/CookieApi/SaveCookieCart", datas).success(function (data, status) {

                                    if (data.length > 0 && data[0] == "Success") {
                                        $scope.loader = false;
                                        if (angular.isUndefined($cookies.get('leasebasket'))) {
                                            $cookies.putObject('leasebasket', data[1], { 'expires': expireDate, 'path': '/' });

                                        }
                                        //$rootScope.shoppingCart = $cookies.getObject('leasebasket');

                                        $scope.total += parseFloat(items.Product.mprice);

                                        $scope.count = "showing " + data.length + " results";
                                        jQuery(".added_to_cart.wc-forward").data("original-title", "View Your Basket");
                                        //$rootScope.shoppingCart.push({ item, no });
                                        
                                        $scope.loader = true;
                                        //window.location = "/Leasing/ViewProduct?" + item.mproducturl + "&update=no";
                                        toastr.success("Product added in Your Basket", "Success");
                                    }

                                });

                            }
                        }
                        else {
                            $event.stopPropagation();

                        }
                    };
    }

        ]);
        app.controller('ShoppingCartController', ['$scope', '$http', '$rootScope', '$location', '$sce', '$cookies', function ($scope, $http, $rootScope, $location, $sce, $cookies) {
            var expireDate = new Date();
            expireDate.setDate(expireDate.getDate() + 365);
            $scope.isCheckoutPage = false;

            $rootScope.shoppingCart = $rootScope.shoppingCart || [];
            $rootScope.shoppingCart.totalPrice = 0;

            if ($rootScope.shoppingCart.length <= 0) {
                if (!angular.isUndefined($cookies.get('leasebasket'))) {
                    var id = $cookies.getObject('leasebasket');

                    $http.get('/api/CookieApi/GetCookieCart?id=' + id).success(function (data) {
                        $rootScope.shoppingCart = data;
                        $rootScope.shoppingCart.totalPrice = 0;
                        $rootScope.shoppingCart.totalItems = 0;
                        $scope.getTotalPrice();
                        $scope.getTotalNoOfItems();

                        // $scope.loader = false;
                    });
                }
            }
            $rootScope.$on('itemList', function (event, itemList) {
                $scope.itemList = itemList;
            });

            $scope.$watch('shoppingCart', function () {
                $rootScope.shoppingCart.totalPrice = 0;
                $rootScope.shoppingCart.totalItems = 0;
                $scope.getTotalPrice();
                $scope.getTotalNoOfItems();
                console.log('changed');
            }, true);

            $scope.checkout = function () {
                $location.path('/checkout');
                $scope.isCheckoutPage = true;
            };

            $scope.deleteFromCart = function (index) {
                var id = $cookies.getObject('leasebasket');
                $http.get('/api/CookieApi/GetCartDelete?id=' + $rootScope.shoppingCart[index].Id).success(function (data) {
                    if (data == "delete") {
                        $rootScope.shoppingCart.splice(index, 1);
                        if ($rootScope.shoppingCart.length <= 0) {
                            $cookies.remove("leasebasket", { path: '/' });

                        }
                        else {
                            $cookies.putObject('leasebasket', id, { 'expires': expireDate, 'path': '/' });
                        }
                        toastr.success("Product remove from Your Basket", "Success");
                    }

                });

            };

            $scope.clearShoppingCart = function (index) {
                $rootScope.shoppingCart = [];
            };

            $scope.backToList = function () {
                $location.path('/list');
                $scope.isCheckoutPage = false;
            };

            $scope.getTotalPrice = function () {
                $rootScope.shoppingCart.forEach(function (itemObj) {
                    $rootScope.shoppingCart.totalPrice = Number($rootScope.shoppingCart.totalPrice) + $scope.getItemPrice(itemObj);
                });
            };

            $scope.getTotalNoOfItems = function () {
                $rootScope.shoppingCart.forEach(function (itemObj) {
                    $rootScope.shoppingCart.totalItems += $scope.getItemNo(itemObj);
                });
            };

            $scope.getItemPrice = function (itemObj) {
                var itemPrice = 0;
                console.log("items");
                itemPrice = (Number(itemObj.Product.mprice) * Number(itemObj.Quantity)).toFixed(2);
                return Number(itemPrice);
            };

            $scope.getItemNo = function (itemObj) {
                return itemObj.Quantity;
            };

            $scope.confirmCheckout = function () {
                $location.path('/checkoutsuccess');
                $scope.message = $sce.trustAsHtml($rootScope.shoppingCart.length + ' Items' + ' @@ $' + $rootScope.shoppingCart.totalPrice);
                console.log($scope.successMsg);
                $rootScope.shoppingCart = [];
            };
        }]);
    </script>
    <script type='text/javascript'>
jQuery(document).ready( function($){
				var flex = $( '#electro-wc-product-gallery-5de935f6ca784' );
				var flex_args = {"selector":".electro-wc-product-gallery__wrapper > .electro-wc-product-gallery__image","animation":"slide","controlNav":true,"directionNav":false,"animationLoop":false,"slideshow":false,"asNavFor":".woocommerce-product-gallery","itemMargin":6,"itemWidth":90};
				flex_args.asNavFor = flex.siblings( flex_args.asNavFor );
				flex.flexslider( flex_args );
			} );
    </script>
}


